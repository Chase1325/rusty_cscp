{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0","program":"C:\\Users\\clstl\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","askama","--edition=2018","C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"config\"","--cfg","feature=\"default\"","--cfg","feature=\"humansize\"","--cfg","feature=\"num-traits\"","-C","metadata=e88783f4e6ee020c","-C","extra-filename=-e88783f4e6ee020c","--out-dir","c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps","--extern","askama_derive=c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps\\askama_derive-b77609d933fea8da.dll","--extern","askama_escape=c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps\\libaskama_escape-b587e3bbfb06a503.rmeta","--extern","askama_shared=c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps\\libaskama_shared-b2925f3f70ef8dc1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\clstl\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\clstl\\Documents\\GitHub\\rusty_cscp\\cscp\\target\\rls\\debug\\deps\\libaskama-e88783f4e6ee020c.rmeta"},"prelude":{"crate_id":{"name":"askama","disambiguator":[16321233208919899944,12412497272284218698]},"crate_root":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src","external_crates":[{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":14,"id":{"name":"askama_derive","disambiguator":[17079197791630387599,4134458453738329688]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":15,"id":{"name":"askama_shared","disambiguator":[8555570416431518032,8793716370108271713]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":16,"id":{"name":"serde","disambiguator":[16034805842961617957,9518747882378611194]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[6301729830738462533,18430067057731172151]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":18,"id":{"name":"toml","disambiguator":[12672873797107026358,9104459957383910871]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":19,"id":{"name":"askama_escape","disambiguator":[5516638938835831421,5154228291251971341]}},{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","num":20,"id":{"name":"humansize","disambiguator":[2808094646528536957,3133127037729418393]}}],"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":23657,"line_start":1,"line_end":637,"column_start":1,"column_end":39}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18450,"byte_end":18463,"line_start":483,"line_end":483,"column_start":9,"column_end":22},"alias_span":null,"name":"shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":56},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18566,"byte_end":18570,"line_start":489,"line_end":489,"column_start":25,"column_end":29},"alias_span":null,"name":"Html","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":57},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18566,"byte_end":18570,"line_start":489,"line_end":489,"column_start":25,"column_end":29},"alias_span":null,"name":"Html","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":62},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18572,"byte_end":18576,"line_start":489,"line_end":489,"column_start":31,"column_end":35},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":63},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18572,"byte_end":18576,"line_start":489,"line_end":489,"column_start":31,"column_end":35},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":59},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19546,"byte_end":19553,"line_start":514,"line_end":514,"column_start":24,"column_end":31},"alias_span":null,"name":"filters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":115},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19578,"byte_end":19585,"line_start":515,"line_end":515,"column_start":24,"column_end":31},"alias_span":null,"name":"helpers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":150},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19611,"byte_end":19627,"line_start":516,"line_end":516,"column_start":25,"column_end":41},"alias_span":null,"name":"read_config_file","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":158},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19629,"byte_end":19634,"line_start":516,"line_end":516,"column_start":43,"column_end":48},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":19},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19636,"byte_end":19649,"line_start":516,"line_end":516,"column_start":50,"column_end":63},"alias_span":null,"name":"MarkupDisplay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":43},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19651,"byte_end":19657,"line_start":516,"line_end":516,"column_start":65,"column_end":71},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19683,"byte_end":19684,"line_start":517,"line_end":517,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":23657,"line_start":1,"line_end":637,"column_start":1,"column_end":39},"name":"","qualname":"::","value":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":" Askama implements a type-safe compiler for Jinja-like templates.\n It lets you write templates in a Jinja-like syntax,\n which are linked to a `struct` defining the template context.\n This is done using a custom derive implementation (implemented\n in [`askama_derive`](https://crates.io/crates/askama_derive)).","sig":null,"attributes":[{"value":"/ Askama implements a type-safe compiler for Jinja-like templates.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":68,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ It lets you write templates in a Jinja-like syntax,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":69,"byte_end":124,"line_start":2,"line_end":2,"column_start":1,"column_end":56}},{"value":"/ which are linked to a `struct` defining the template context.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":125,"byte_end":190,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ This is done using a custom derive implementation (implemented","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":191,"byte_end":257,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ in [`askama_derive`](https://crates.io/crates/askama_derive)).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":258,"byte_end":324,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":325,"byte_end":328,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ For feature highlights and a quick start, please review the","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":329,"byte_end":392,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [README](https://github.com/djc/askama/blob/master/README.md).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":393,"byte_end":459,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":460,"byte_end":463,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Creating Askama templates","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":464,"byte_end":495,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":496,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ An Askama template is a `struct` definition which provides the template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":500,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ context combined with a UTF-8 encoded text file (or inline source, see","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":576,"byte_end":650,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ below). Askama can be used to generate any kind of text-based format.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":651,"byte_end":724,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ The template file's extension may be used to provide content type hints.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":725,"byte_end":801,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":802,"byte_end":805,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A template consists of **text contents**, which are passed through as-is,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":806,"byte_end":883,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ **expressions**, which get replaced with content while being rendered, and","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":884,"byte_end":962,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ **tags**, which control the template's logic.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":963,"byte_end":1012,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ The template syntax is very similar to [Jinja](http://jinja.pocoo.org/),","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1013,"byte_end":1089,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ as well as Jinja-derivatives like [Twig](http://twig.sensiolabs.org/) or","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1090,"byte_end":1166,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ [Tera](https://github.com/Keats/tera).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1167,"byte_end":1209,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1210,"byte_end":1213,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## The `template()` attribute","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1214,"byte_end":1247,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1248,"byte_end":1251,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Askama works by generating one or more trait implementations for any","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1252,"byte_end":1324,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `struct` type decorated with the `#[derive(Template)]` attribute. The","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1325,"byte_end":1398,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ code generation process takes some options that can be specified through","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1399,"byte_end":1475,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ the `template()` attribute. The following sub-attributes are currently","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1476,"byte_end":1550,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ recognized:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1551,"byte_end":1566,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1567,"byte_end":1570,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ * `path` (as `path = \"foo.html\"`): sets the path to the template file. The","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1571,"byte_end":1649,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   path is interpreted as relative to the configured template directories","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1650,"byte_end":1726,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/   (by default, this is a `templates` directory next to your `Cargo.toml`).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1727,"byte_end":1805,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   The file name extension is used to infer an escape mode (see below). In","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1806,"byte_end":1883,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/   web framework integrations, the path's extension may also be used to","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1884,"byte_end":1958,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/   infer the content type of the resulting response.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":1959,"byte_end":2014,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/   Cannot be used together with `source`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2015,"byte_end":2059,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ * `source` (as `source = \"{{ foo }}\"`): directly sets the template source.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2060,"byte_end":2138,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/   This can be useful for test cases or short templates. The generated path","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2139,"byte_end":2217,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/   is undefined, which generally makes it impossible to refer to this","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2218,"byte_end":2290,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/   template from other templates. If `source` is specified, `ext` must also","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2291,"byte_end":2369,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/   be specified (see below). Cannot be used together with `path`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2370,"byte_end":2438,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ * `ext` (as `ext = \"txt\"`): lets you specify the content type as a file","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2439,"byte_end":2514,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/   extension. This is used to infer an escape mode (see below), and some","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2515,"byte_end":2590,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   web framework integrations use it to determine the content type.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2591,"byte_end":2661,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/   Cannot be used together with `path`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2662,"byte_end":2704,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ * `print` (as `print = \"code\"`): enable debugging by printing nothing","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2705,"byte_end":2778,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/   (`none`), the parsed syntax tree (`ast`), the generated code (`code`)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2779,"byte_end":2854,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/   or `all` for both. The requested data will be printed to stdout at","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2855,"byte_end":2927,"line_start":50,"line_end":50,"column_start":1,"column_end":73}},{"value":"/   compile time.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2928,"byte_end":2947,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ * `escape` (as `escape = \"none\"`): override the template's extension used for","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":2948,"byte_end":3029,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/   the purpose of determining the escaper for this template. See the section","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3030,"byte_end":3109,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/   on configuring custom escapers for more information.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3110,"byte_end":3168,"line_start":54,"line_end":54,"column_start":1,"column_end":59}},{"value":"/ * `syntax` (as `syntax = \"foo\"`): set the syntax name for a parser defined","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3169,"byte_end":3247,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   in the configuration file. The default syntax , \"default\",  is the one","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3248,"byte_end":3324,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/   provided by Askama.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3325,"byte_end":3350,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3351,"byte_end":3354,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ## Configuration","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3355,"byte_end":3375,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3376,"byte_end":3379,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ At compile time, Askama will read optional configuration values from","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3380,"byte_end":3452,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ `askama.toml` in the crate root (the directory where `Cargo.toml` can","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3453,"byte_end":3526,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ be found). Currently, this covers the directories to search for templates,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3527,"byte_end":3605,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ custom syntax configuration and escaper configuration.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3606,"byte_end":3664,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3665,"byte_end":3668,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This example file demonstrates the default configuration:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3669,"byte_end":3730,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3731,"byte_end":3734,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3735,"byte_end":3746,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ [general]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3747,"byte_end":3760,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/ # Directories to search for templates, relative to the crate root.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3761,"byte_end":3831,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ dirs = [\"templates\"]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3832,"byte_end":3856,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3857,"byte_end":3864,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3865,"byte_end":3868,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Here is an example that defines two custom syntaxes:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3869,"byte_end":3925,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3926,"byte_end":3929,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3930,"byte_end":3941,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ [general]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3942,"byte_end":3955,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ default_syntax = \"foo\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3956,"byte_end":3982,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3983,"byte_end":3986,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [[syntax]]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":3987,"byte_end":4001,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/ name = \"foo\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4002,"byte_end":4018,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/ block_start = \"%{\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4019,"byte_end":4041,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/ comment_start = \"#{\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4042,"byte_end":4066,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"/ expr_end = \"^^\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4067,"byte_end":4086,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4087,"byte_end":4090,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [[syntax]]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4091,"byte_end":4105,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/ name = \"bar\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4106,"byte_end":4122,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/ block_start = \"%%\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4123,"byte_end":4145,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ block_end = \"%%\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4146,"byte_end":4166,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/ comment_start = \"%#\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4167,"byte_end":4191,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/ expr_start = \"%{\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4192,"byte_end":4213,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4214,"byte_end":4221,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4222,"byte_end":4225,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ A syntax block consists of at least the attribute `name` which uniquely","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4226,"byte_end":4301,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ names this syntax in the project.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4302,"byte_end":4339,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4340,"byte_end":4343,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ The following keys can currently be used to customize template syntax:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4344,"byte_end":4418,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4419,"byte_end":4422,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * `block_start`, defaults to `{%`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4423,"byte_end":4460,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/ * `block_end`, defaults to `%}`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4461,"byte_end":4496,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/ * `comment_start`, defaults to `{#`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4497,"byte_end":4536,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"/ * `comment_end`, defaults to `#}`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4537,"byte_end":4574,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/ * `expr_start`, defaults to `{{`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4575,"byte_end":4611,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/ * `expr_end`, defaults to `}}`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4612,"byte_end":4646,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4647,"byte_end":4650,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Values must be 2 characters long and start delimiters must all start with the same","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4651,"byte_end":4737,"line_start":106,"line_end":106,"column_start":1,"column_end":87}},{"value":"/ character. If a key is omitted, the value from the default syntax is used.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4738,"byte_end":4816,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4817,"byte_end":4820,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Here is an example of a custom escaper:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4821,"byte_end":4864,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4865,"byte_end":4868,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4869,"byte_end":4880,"line_start":111,"line_end":111,"column_start":1,"column_end":12}},{"value":"/ [[escaper]]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4881,"byte_end":4896,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/ path = \"::tex_escape::Tex\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4897,"byte_end":4927,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"/ extensions = [\"tex\"]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4928,"byte_end":4952,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4953,"byte_end":4960,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4961,"byte_end":4964,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ An escaper block consists of the attributes `path` and `name`. `path`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":4965,"byte_end":5038,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/ contains a Rust identifier that must be in scope for templates using this","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5039,"byte_end":5116,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ escaper. `extensions` defines a list of file extensions that will trigger","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5117,"byte_end":5194,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ the use of that escaper. Extensions are matched in order, starting with the","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5195,"byte_end":5274,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ first escaper configured and ending with the default escapers for HTML","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5275,"byte_end":5349,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ (extensions `html`, `htm`, `xml`, `j2`, `jinja`, `jinja2`) and plain text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5350,"byte_end":5427,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ (no escaping; `md`, `yml`, `none`, `txt`, and the empty string). Note that","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5428,"byte_end":5506,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ this means you can also define other escapers that match different extensions","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5507,"byte_end":5588,"line_start":124,"line_end":124,"column_start":1,"column_end":82}},{"value":"/ to the same escaper.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5589,"byte_end":5613,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5614,"byte_end":5617,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Variables","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5618,"byte_end":5634,"line_start":127,"line_end":127,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5635,"byte_end":5638,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Top-level template variables are defined by the template's context type.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5639,"byte_end":5715,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ You can use a dot (`.`) to access variable's attributes or methods.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5716,"byte_end":5787,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/ Reading from variables is subject to the usual borrowing policies.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5788,"byte_end":5858,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/ For example, `{{ name }}` will get the ``name`` field from the template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5859,"byte_end":5934,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ context,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5935,"byte_end":5947,"line_start":133,"line_end":133,"column_start":1,"column_end":13}},{"value":"/ while `{{ user.name }}` will get the ``name`` field of the ``user``","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":5948,"byte_end":6019,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ field from the template context.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6020,"byte_end":6056,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6057,"byte_end":6060,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ## Assignments","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6061,"byte_end":6079,"line_start":137,"line_end":137,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6080,"byte_end":6083,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Inside code blocks, you can also declare variables or assign values","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6084,"byte_end":6155,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ to variables.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6156,"byte_end":6173,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ Assignments can't be imported by other templates.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6174,"byte_end":6227,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6228,"byte_end":6231,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Assignments use the let tag:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6232,"byte_end":6264,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6265,"byte_end":6268,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6269,"byte_end":6280,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ {% let name = user.name %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6281,"byte_end":6311,"line_start":146,"line_end":146,"column_start":1,"column_end":31}},{"value":"/ {% let len = name.len() %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6312,"byte_end":6342,"line_start":147,"line_end":147,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6343,"byte_end":6346,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ {% let val -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6347,"byte_end":6365,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/ {% if len == 0 -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6366,"byte_end":6388,"line_start":150,"line_end":150,"column_start":1,"column_end":23}},{"value":"/   {% let val = \"foo\" -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6389,"byte_end":6417,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ {% else -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6418,"byte_end":6433,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"/   {% let val = name -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6434,"byte_end":6461,"line_start":153,"line_end":153,"column_start":1,"column_end":28}},{"value":"/ {% endif -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6462,"byte_end":6478,"line_start":154,"line_end":154,"column_start":1,"column_end":17}},{"value":"/ {{ val }}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6479,"byte_end":6492,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6493,"byte_end":6500,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6501,"byte_end":6504,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ## Filters","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6505,"byte_end":6519,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6520,"byte_end":6523,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Values such as those obtained from variables can be post-processed","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6524,"byte_end":6594,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/ using **filters**.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6595,"byte_end":6617,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/ Filters are applied to values using the pipe symbol (`|`) and may","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6618,"byte_end":6687,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ have optional extra arguments in parentheses.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6688,"byte_end":6737,"line_start":163,"line_end":163,"column_start":1,"column_end":50}},{"value":"/ Filters can be chained, in which case the output from one filter","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6738,"byte_end":6806,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"/ is passed to the next.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6807,"byte_end":6833,"line_start":165,"line_end":165,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6834,"byte_end":6837,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ For example, `{{ \"{:?}\"|format(name|escape) }}` will escape HTML","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6838,"byte_end":6906,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ characters from the value obtained by accessing the `name` field,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6907,"byte_end":6976,"line_start":168,"line_end":168,"column_start":1,"column_end":70}},{"value":"/ and print the resulting string as a Rust literal.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":6977,"byte_end":7030,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7031,"byte_end":7034,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ The built-in filters are documented as part of the","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7035,"byte_end":7089,"line_start":171,"line_end":171,"column_start":1,"column_end":55}},{"value":"/ [filters module documentation](filters/index.html).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7090,"byte_end":7145,"line_start":172,"line_end":172,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7146,"byte_end":7149,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ To define your own filters, simply have a module named `filters` in","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7150,"byte_end":7221,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"/ scope of the context deriving a `Template` `impl`. Note that in case of","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7222,"byte_end":7297,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ name collision, the built in filters take precedence.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7298,"byte_end":7355,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7356,"byte_end":7359,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ## Whitespace control","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7360,"byte_end":7385,"line_start":178,"line_end":178,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7386,"byte_end":7389,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Askama considers all tabs, spaces, newlines and carriage returns to be","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7390,"byte_end":7464,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ whitespace. By default, it preserves all whitespace in template code,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7465,"byte_end":7538,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/ except that a single trailing newline character is suppressed.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7539,"byte_end":7605,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"/ However, whitespace before and after expression and block delimiters","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7606,"byte_end":7678,"line_start":183,"line_end":183,"column_start":1,"column_end":73}},{"value":"/ can be suppressed by writing a minus sign directly following a","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7679,"byte_end":7745,"line_start":184,"line_end":184,"column_start":1,"column_end":67}},{"value":"/ start delimiter or leading into an end delimiter.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7746,"byte_end":7799,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7800,"byte_end":7803,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Here is an example:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7804,"byte_end":7827,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7828,"byte_end":7831,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7832,"byte_end":7843,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/ {% if foo %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7844,"byte_end":7860,"line_start":190,"line_end":190,"column_start":1,"column_end":17}},{"value":"/   {{- bar -}}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7861,"byte_end":7878,"line_start":191,"line_end":191,"column_start":1,"column_end":18}},{"value":"/ {% else if -%}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7879,"byte_end":7897,"line_start":192,"line_end":192,"column_start":1,"column_end":19}},{"value":"/   nothing","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7898,"byte_end":7911,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/ {%- endif %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7912,"byte_end":7928,"line_start":194,"line_end":194,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7929,"byte_end":7936,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7937,"byte_end":7940,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ This discards all whitespace inside the if/else block. If a literal","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":7941,"byte_end":8012,"line_start":197,"line_end":197,"column_start":1,"column_end":72}},{"value":"/ (any part of the template not surrounded by `{% %}` or `{{ }}`)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8013,"byte_end":8080,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ includes only whitespace, whitespace suppression on either side will","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8081,"byte_end":8153,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ completely suppress that literal content.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8154,"byte_end":8199,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8200,"byte_end":8203,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ## Template inheritance","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8204,"byte_end":8231,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8232,"byte_end":8235,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Template inheritance allows you to build a base template with common","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8236,"byte_end":8308,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ elements that can be shared by all inheriting templates.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8309,"byte_end":8369,"line_start":205,"line_end":205,"column_start":1,"column_end":61}},{"value":"/ A base template defines **blocks** that child templates can override.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8370,"byte_end":8443,"line_start":206,"line_end":206,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8444,"byte_end":8447,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ### Base template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8448,"byte_end":8469,"line_start":208,"line_end":208,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8470,"byte_end":8473,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8474,"byte_end":8485,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ <!DOCTYPE html>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8486,"byte_end":8505,"line_start":211,"line_end":211,"column_start":1,"column_end":20}},{"value":"/ <html lang=\"en\">","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8506,"byte_end":8526,"line_start":212,"line_end":212,"column_start":1,"column_end":21}},{"value":"/   <head>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8527,"byte_end":8539,"line_start":213,"line_end":213,"column_start":1,"column_end":13}},{"value":"/     <title>{% block title %}{{ title }} - My Site{% endblock %}</title>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8540,"byte_end":8615,"line_start":214,"line_end":214,"column_start":1,"column_end":76}},{"value":"/     {% block head %}{% endblock %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8616,"byte_end":8654,"line_start":215,"line_end":215,"column_start":1,"column_end":39}},{"value":"/   </head>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8655,"byte_end":8668,"line_start":216,"line_end":216,"column_start":1,"column_end":14}},{"value":"/   <body>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8669,"byte_end":8681,"line_start":217,"line_end":217,"column_start":1,"column_end":13}},{"value":"/     <div id=\"content\">","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8682,"byte_end":8708,"line_start":218,"line_end":218,"column_start":1,"column_end":27}},{"value":"/       {% block content %}{% endblock %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8709,"byte_end":8752,"line_start":219,"line_end":219,"column_start":1,"column_end":44}},{"value":"/     </div>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8753,"byte_end":8767,"line_start":220,"line_end":220,"column_start":1,"column_end":15}},{"value":"/   </body>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8768,"byte_end":8781,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/ </html>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8782,"byte_end":8793,"line_start":222,"line_end":222,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8794,"byte_end":8801,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8802,"byte_end":8805,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ The `block` tags define three blocks that can be filled in by child","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8806,"byte_end":8877,"line_start":225,"line_end":225,"column_start":1,"column_end":72}},{"value":"/ templates. The base template defines a default version of the block.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8878,"byte_end":8950,"line_start":226,"line_end":226,"column_start":1,"column_end":73}},{"value":"/ A base template must define one or more blocks in order to enable","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":8951,"byte_end":9020,"line_start":227,"line_end":227,"column_start":1,"column_end":70}},{"value":"/ inheritance. Blocks can only be specified at the top level of a template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9021,"byte_end":9097,"line_start":228,"line_end":228,"column_start":1,"column_end":77}},{"value":"/ or inside other blocks, not inside `if`/`else` branches or in `for`-loop","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9098,"byte_end":9174,"line_start":229,"line_end":229,"column_start":1,"column_end":77}},{"value":"/ bodies.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9175,"byte_end":9186,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9187,"byte_end":9190,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ ### Child template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9191,"byte_end":9213,"line_start":232,"line_end":232,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9214,"byte_end":9217,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Here's an example child template:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9218,"byte_end":9255,"line_start":234,"line_end":234,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9256,"byte_end":9259,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9260,"byte_end":9271,"line_start":236,"line_end":236,"column_start":1,"column_end":12}},{"value":"/ {% extends \"base.html\" %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9272,"byte_end":9301,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9302,"byte_end":9305,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ {% block title %}Index{% endblock %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9306,"byte_end":9346,"line_start":239,"line_end":239,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9347,"byte_end":9350,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ {% block head %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9351,"byte_end":9371,"line_start":241,"line_end":241,"column_start":1,"column_end":21}},{"value":"/   <style>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9372,"byte_end":9385,"line_start":242,"line_end":242,"column_start":1,"column_end":14}},{"value":"/   </style>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9386,"byte_end":9400,"line_start":243,"line_end":243,"column_start":1,"column_end":15}},{"value":"/ {% endblock %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9401,"byte_end":9419,"line_start":244,"line_end":244,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9420,"byte_end":9423,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ {% block content %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9424,"byte_end":9447,"line_start":246,"line_end":246,"column_start":1,"column_end":24}},{"value":"/   <h1>Index</h1>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9448,"byte_end":9468,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/   <p>Hello, world!</p>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9469,"byte_end":9495,"line_start":248,"line_end":248,"column_start":1,"column_end":27}},{"value":"/ {% endblock %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9496,"byte_end":9514,"line_start":249,"line_end":249,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9515,"byte_end":9522,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9523,"byte_end":9526,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The `extends` tag tells the code generator that this template inherits","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9527,"byte_end":9601,"line_start":252,"line_end":252,"column_start":1,"column_end":75}},{"value":"/ from another template. It will search for the base template relative to","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9602,"byte_end":9677,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ itself before looking relative to the template base directory. It will","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9678,"byte_end":9752,"line_start":254,"line_end":254,"column_start":1,"column_end":75}},{"value":"/ render the top-level content from the base template, and substitute","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9753,"byte_end":9824,"line_start":255,"line_end":255,"column_start":1,"column_end":72}},{"value":"/ blocks from the base template with those from the child template. Inside","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9825,"byte_end":9901,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ a block in a child template, the `super()` macro can be called to render","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9902,"byte_end":9978,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ the parent block's contents.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":9979,"byte_end":10011,"line_start":258,"line_end":258,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10012,"byte_end":10015,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ## HTML escaping","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10016,"byte_end":10036,"line_start":260,"line_end":260,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10037,"byte_end":10040,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Askama by default escapes variables if it thinks it is rendering HTML","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10041,"byte_end":10114,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ content. It infers the escaping context from the extension of template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10115,"byte_end":10189,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/ filenames, escaping by default if the extension is one of `html`, `htm`,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10190,"byte_end":10266,"line_start":264,"line_end":264,"column_start":1,"column_end":77}},{"value":"/ or `xml`. When specifying a template as `source` in an attribute, the","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10267,"byte_end":10340,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ `ext` attribute parameter must be used to specify a type. Additionally,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10341,"byte_end":10416,"line_start":266,"line_end":266,"column_start":1,"column_end":76}},{"value":"/ you can specify an escape mode explicitly for your template by setting","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10417,"byte_end":10491,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ the `escape` attribute parameter value (to `none` or `html`).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10492,"byte_end":10557,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10558,"byte_end":10561,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Askama escapes `<`, `>`, `&`, `\"`, `'`, `\\` and `/`, according to the","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10562,"byte_end":10635,"line_start":270,"line_end":270,"column_start":1,"column_end":74}},{"value":"/ [OWASP escaping recommendations][owasp]. Use the `safe` filter to","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10636,"byte_end":10705,"line_start":271,"line_end":271,"column_start":1,"column_end":70}},{"value":"/ prevent escaping for a single expression, or the `escape` (or `e`)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10706,"byte_end":10776,"line_start":272,"line_end":272,"column_start":1,"column_end":71}},{"value":"/ filter to escape a single expression in an unescaped context.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10777,"byte_end":10842,"line_start":273,"line_end":273,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10843,"byte_end":10846,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ [owasp]: https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.231_-_HTML_Escape_Before_Inserting_Untrusted_Data_into_HTML_Element_Content","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":10847,"byte_end":11023,"line_start":275,"line_end":275,"column_start":1,"column_end":177}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11024,"byte_end":11027,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ## Control structures","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11028,"byte_end":11053,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11054,"byte_end":11057,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ ### For","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11058,"byte_end":11069,"line_start":279,"line_end":279,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11070,"byte_end":11073,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ Loop over each item in an iterator. For example:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11074,"byte_end":11126,"line_start":281,"line_end":281,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11127,"byte_end":11130,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11131,"byte_end":11142,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ <h1>Users</h1>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11143,"byte_end":11161,"line_start":284,"line_end":284,"column_start":1,"column_end":19}},{"value":"/ <ul>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11162,"byte_end":11170,"line_start":285,"line_end":285,"column_start":1,"column_end":9}},{"value":"/ {% for user in users %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11171,"byte_end":11198,"line_start":286,"line_end":286,"column_start":1,"column_end":28}},{"value":"/   <li>{{ user.name|e }}</li>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11199,"byte_end":11231,"line_start":287,"line_end":287,"column_start":1,"column_end":33}},{"value":"/ {% endfor %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11232,"byte_end":11248,"line_start":288,"line_end":288,"column_start":1,"column_end":17}},{"value":"/ </ul>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11249,"byte_end":11258,"line_start":289,"line_end":289,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11259,"byte_end":11266,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11267,"byte_end":11270,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ Inside for-loop blocks, some useful variables are accessible:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11271,"byte_end":11336,"line_start":292,"line_end":292,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11337,"byte_end":11340,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ * *loop.index*: current loop iteration (starting from 1)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11341,"byte_end":11401,"line_start":294,"line_end":294,"column_start":1,"column_end":61}},{"value":"/ * *loop.index0*: current loop iteration (starting from 0)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11402,"byte_end":11463,"line_start":295,"line_end":295,"column_start":1,"column_end":62}},{"value":"/ * *loop.first*: whether this is the first iteration of the loop","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11464,"byte_end":11531,"line_start":296,"line_end":296,"column_start":1,"column_end":68}},{"value":"/ * *loop.last*: whether this is the last iteration of the loop","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11532,"byte_end":11597,"line_start":297,"line_end":297,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11598,"byte_end":11601,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ### If","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11602,"byte_end":11612,"line_start":299,"line_end":299,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11613,"byte_end":11616,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ The *if* statement is used as you might expect:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11617,"byte_end":11668,"line_start":301,"line_end":301,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11669,"byte_end":11672,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11673,"byte_end":11684,"line_start":303,"line_end":303,"column_start":1,"column_end":12}},{"value":"/ {% if users.len() == 0 %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11685,"byte_end":11714,"line_start":304,"line_end":304,"column_start":1,"column_end":30}},{"value":"/   No users","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11715,"byte_end":11729,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/ {% else if users.len() == 1 %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11730,"byte_end":11764,"line_start":306,"line_end":306,"column_start":1,"column_end":35}},{"value":"/   1 user","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11765,"byte_end":11777,"line_start":307,"line_end":307,"column_start":1,"column_end":13}},{"value":"/ {% else %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11778,"byte_end":11792,"line_start":308,"line_end":308,"column_start":1,"column_end":15}},{"value":"/   {{ users.len() }} users","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11793,"byte_end":11822,"line_start":309,"line_end":309,"column_start":1,"column_end":30}},{"value":"/ {% endif %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11823,"byte_end":11838,"line_start":310,"line_end":310,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11839,"byte_end":11846,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11847,"byte_end":11850,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ ### Match","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11851,"byte_end":11864,"line_start":313,"line_end":313,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11865,"byte_end":11868,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ In order to deal with Rust `enum`s in a type-safe way, templates support","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11869,"byte_end":11945,"line_start":315,"line_end":315,"column_start":1,"column_end":77}},{"value":"/ match blocks from version 0.6. Here is a simple example showing how to","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":11946,"byte_end":12020,"line_start":316,"line_end":316,"column_start":1,"column_end":75}},{"value":"/ expand an `Option`:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12021,"byte_end":12044,"line_start":317,"line_end":317,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12045,"byte_end":12048,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12049,"byte_end":12060,"line_start":319,"line_end":319,"column_start":1,"column_end":12}},{"value":"/ {% match item %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12061,"byte_end":12081,"line_start":320,"line_end":320,"column_start":1,"column_end":21}},{"value":"/   {% when Some with (\"foo\") %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12082,"byte_end":12116,"line_start":321,"line_end":321,"column_start":1,"column_end":35}},{"value":"/     Found literal foo","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12117,"byte_end":12142,"line_start":322,"line_end":322,"column_start":1,"column_end":26}},{"value":"/   {% when Some with (val) %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12143,"byte_end":12175,"line_start":323,"line_end":323,"column_start":1,"column_end":33}},{"value":"/     Found {{ val }}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12176,"byte_end":12199,"line_start":324,"line_end":324,"column_start":1,"column_end":24}},{"value":"/   {% when None %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12200,"byte_end":12221,"line_start":325,"line_end":325,"column_start":1,"column_end":22}},{"value":"/ {% endmatch %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12222,"byte_end":12240,"line_start":326,"line_end":326,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12241,"byte_end":12248,"line_start":327,"line_end":327,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12249,"byte_end":12252,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ That is, a `match` block can optionally contain some whitespace (but","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12253,"byte_end":12325,"line_start":329,"line_end":329,"column_start":1,"column_end":73}},{"value":"/ no other literal content), followed by a number of `when` blocks and","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12326,"byte_end":12398,"line_start":330,"line_end":330,"column_start":1,"column_end":73}},{"value":"/ and an optional `else` block. Each `when` block must name a list of","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12399,"byte_end":12470,"line_start":331,"line_end":331,"column_start":1,"column_end":72}},{"value":"/ matches (`(val)`), optionally introduced with a variant name. The","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12471,"byte_end":12540,"line_start":332,"line_end":332,"column_start":1,"column_end":70}},{"value":"/ `else` block is equivalent to matching on `_` (matching anything).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12541,"byte_end":12611,"line_start":333,"line_end":333,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12612,"byte_end":12615,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ### Include","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12616,"byte_end":12631,"line_start":335,"line_end":335,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12632,"byte_end":12635,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ The *include* statement lets you split large or repetitive blocks into","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12636,"byte_end":12710,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ separate template files. Included templates get full access to the context","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12711,"byte_end":12789,"line_start":338,"line_end":338,"column_start":1,"column_end":79}},{"value":"/ in which they're used, including local variables like those from loops:","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12790,"byte_end":12865,"line_start":339,"line_end":339,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12866,"byte_end":12869,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12870,"byte_end":12881,"line_start":341,"line_end":341,"column_start":1,"column_end":12}},{"value":"/ {% for i in iter %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12882,"byte_end":12905,"line_start":342,"line_end":342,"column_start":1,"column_end":24}},{"value":"/   {% include \"item.html\" %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12906,"byte_end":12937,"line_start":343,"line_end":343,"column_start":1,"column_end":32}},{"value":"/ {% endfor %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12938,"byte_end":12954,"line_start":344,"line_end":344,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12955,"byte_end":12962,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12963,"byte_end":12966,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12967,"byte_end":12978,"line_start":347,"line_end":347,"column_start":1,"column_end":12}},{"value":"/ * Item: {{ i }}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12979,"byte_end":12998,"line_start":348,"line_end":348,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":12999,"byte_end":13006,"line_start":349,"line_end":349,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13007,"byte_end":13010,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ The path to include must be a string literal, so that it is known at","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13011,"byte_end":13083,"line_start":351,"line_end":351,"column_start":1,"column_end":73}},{"value":"/ compile time. Askama will try to find the specified template relative","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13084,"byte_end":13157,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ to the including template's path before falling back to the absolute","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13158,"byte_end":13230,"line_start":353,"line_end":353,"column_start":1,"column_end":73}},{"value":"/ template path. Use `include` within the branches of an `if`/`else`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13231,"byte_end":13301,"line_start":354,"line_end":354,"column_start":1,"column_end":71}},{"value":"/ block to use includes more dynamically.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13302,"byte_end":13345,"line_start":355,"line_end":355,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13346,"byte_end":13349,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ ## Expressions","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13350,"byte_end":13368,"line_start":357,"line_end":357,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13369,"byte_end":13372,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Askama supports string literals (`\"foo\"`) and integer literals (`1`).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13373,"byte_end":13446,"line_start":359,"line_end":359,"column_start":1,"column_end":74}},{"value":"/ It supports almost all binary operators that Rust supports,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13447,"byte_end":13510,"line_start":360,"line_end":360,"column_start":1,"column_end":64}},{"value":"/ including arithmetic, comparison and logic operators.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13511,"byte_end":13568,"line_start":361,"line_end":361,"column_start":1,"column_end":58}},{"value":"/ The parser applies the same precedence order as the Rust compiler.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13569,"byte_end":13639,"line_start":362,"line_end":362,"column_start":1,"column_end":71}},{"value":"/ Expressions can be grouped using parentheses.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13640,"byte_end":13689,"line_start":363,"line_end":363,"column_start":1,"column_end":50}},{"value":"/ The HTML special characters `&`, `<` and `>` will be replaced with their","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13690,"byte_end":13766,"line_start":364,"line_end":364,"column_start":1,"column_end":77}},{"value":"/ character entities unless the `escape` mode is disabled for a template.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13767,"byte_end":13842,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ Methods can be called on variables that are in scope, including `self`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13843,"byte_end":13918,"line_start":366,"line_end":366,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13919,"byte_end":13922,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ **Warning**: if the result of an expression (a `{{ }}` block) is","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13923,"byte_end":13991,"line_start":368,"line_end":368,"column_start":1,"column_end":69}},{"value":"/ equivalent to `self`, this can result in a stack overflow from infinite","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":13992,"byte_end":14067,"line_start":369,"line_end":369,"column_start":1,"column_end":76}},{"value":"/ recursion. This is because the `Display` implementation for that expression","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14068,"byte_end":14147,"line_start":370,"line_end":370,"column_start":1,"column_end":80}},{"value":"/ will in turn evaluate the expression and yield `self` again.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14148,"byte_end":14212,"line_start":371,"line_end":371,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14213,"byte_end":14216,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ## Templates in templates","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14217,"byte_end":14246,"line_start":373,"line_end":373,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14247,"byte_end":14250,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ Using expressions, it is possible to delegate rendering part of a template to another template.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14251,"byte_end":14350,"line_start":375,"line_end":375,"column_start":1,"column_end":100}},{"value":"/ This makes it possible to inject modular template sections into other templates and facilitates","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14351,"byte_end":14450,"line_start":376,"line_end":376,"column_start":1,"column_end":100}},{"value":"/ testing and reuse.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14451,"byte_end":14473,"line_start":377,"line_end":377,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14474,"byte_end":14477,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14478,"byte_end":14489,"line_start":379,"line_end":379,"column_start":1,"column_end":12}},{"value":"/ use askama::Template;","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14490,"byte_end":14515,"line_start":380,"line_end":380,"column_start":1,"column_end":26}},{"value":"/ #[derive(Template)]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14516,"byte_end":14539,"line_start":381,"line_end":381,"column_start":1,"column_end":24}},{"value":"/ #[template(source = \"Section 1: {{ s1.render().unwrap() }}\", ext = \"txt\")]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14540,"byte_end":14618,"line_start":382,"line_end":382,"column_start":1,"column_end":79}},{"value":"/ struct RenderInPlace<'a> {","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14619,"byte_end":14649,"line_start":383,"line_end":383,"column_start":1,"column_end":31}},{"value":"/    s1: SectionOne<'a>","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14650,"byte_end":14675,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14676,"byte_end":14681,"line_start":385,"line_end":385,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14682,"byte_end":14685,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ #[derive(Template)]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14686,"byte_end":14709,"line_start":387,"line_end":387,"column_start":1,"column_end":24}},{"value":"/ #[template(source = \"A={{ a }}\\nB={{ b }}\", ext = \"txt\")]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14710,"byte_end":14771,"line_start":388,"line_end":388,"column_start":1,"column_end":62}},{"value":"/ struct SectionOne<'a> {","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14772,"byte_end":14799,"line_start":389,"line_end":389,"column_start":1,"column_end":28}},{"value":"/    a: &'a str,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14800,"byte_end":14818,"line_start":390,"line_end":390,"column_start":1,"column_end":19}},{"value":"/    b: &'a str,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14819,"byte_end":14837,"line_start":391,"line_end":391,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14838,"byte_end":14843,"line_start":392,"line_end":392,"column_start":1,"column_end":6}},{"value":"/ let t = RenderInPlace { s1: SectionOne { a: \"a\", b: \"b\" } };","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14844,"byte_end":14908,"line_start":393,"line_end":393,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(t.render().unwrap(), \"Section 1: A=a\\nB=b\")","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14909,"byte_end":14967,"line_start":394,"line_end":394,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14968,"byte_end":14975,"line_start":395,"line_end":395,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14976,"byte_end":14979,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ See the example","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":14980,"byte_end":14999,"line_start":397,"line_end":397,"column_start":1,"column_end":20}},{"value":"/ [render in place](https://github.com/djc/askama/blob/master/testing/tests/render_in_place.rs)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15000,"byte_end":15097,"line_start":398,"line_end":398,"column_start":1,"column_end":98}},{"value":"/ using a vector of templates in a for block.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15098,"byte_end":15145,"line_start":399,"line_end":399,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15146,"byte_end":15149,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ ## Comments","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15150,"byte_end":15165,"line_start":401,"line_end":401,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15166,"byte_end":15169,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ Askama supports block comments delimited by `{#` and `#}`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15170,"byte_end":15232,"line_start":403,"line_end":403,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15233,"byte_end":15236,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15237,"byte_end":15240,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ## Recursive Structures","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15241,"byte_end":15268,"line_start":406,"line_end":406,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15269,"byte_end":15272,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ Recursive implementations should preferably use a custom iterator and","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15273,"byte_end":15346,"line_start":408,"line_end":408,"column_start":1,"column_end":74}},{"value":"/ use a plain loop. If that is not doable, call `.render()`","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15347,"byte_end":15408,"line_start":409,"line_end":409,"column_start":1,"column_end":62}},{"value":"/ directly by using an expression as shown below.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15409,"byte_end":15460,"line_start":410,"line_end":410,"column_start":1,"column_end":52}},{"value":"/ Including self does not work, see #105 and #220 .","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15461,"byte_end":15514,"line_start":411,"line_end":411,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15515,"byte_end":15518,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15519,"byte_end":15530,"line_start":413,"line_end":413,"column_start":1,"column_end":12}},{"value":"/ use askama::Template;","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15531,"byte_end":15556,"line_start":414,"line_end":414,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15557,"byte_end":15560,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ #[derive(Template)]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15561,"byte_end":15584,"line_start":416,"line_end":416,"column_start":1,"column_end":24}},{"value":"/ #[template(source = r#\"","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15585,"byte_end":15612,"line_start":417,"line_end":417,"column_start":1,"column_end":28}},{"value":"/ //! {% for item in children %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15613,"byte_end":15647,"line_start":418,"line_end":418,"column_start":1,"column_end":35}},{"value":"/    {{ item.render().unwrap() }}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15648,"byte_end":15683,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/ {% endfor %}","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15684,"byte_end":15700,"line_start":420,"line_end":420,"column_start":1,"column_end":17}},{"value":"/ \"#, ext = \"html\", escape = \"none\")]","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15701,"byte_end":15740,"line_start":421,"line_end":421,"column_start":1,"column_end":40}},{"value":"/ struct Item<'a> {","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15741,"byte_end":15762,"line_start":422,"line_end":422,"column_start":1,"column_end":22}},{"value":"/     name: &'a str,","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15763,"byte_end":15785,"line_start":423,"line_end":423,"column_start":1,"column_end":23}},{"value":"/     children: &'a [Item<'a>],","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15786,"byte_end":15819,"line_start":424,"line_end":424,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15820,"byte_end":15825,"line_start":425,"line_end":425,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15826,"byte_end":15833,"line_start":426,"line_end":426,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15834,"byte_end":15837,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Optional functionality","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15838,"byte_end":15866,"line_start":428,"line_end":428,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15867,"byte_end":15870,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ## Rocket integration","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15871,"byte_end":15896,"line_start":430,"line_end":430,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15897,"byte_end":15900,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Enabling the `with-rocket` feature appends an implementation of Rocket's","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15901,"byte_end":15977,"line_start":432,"line_end":432,"column_start":1,"column_end":77}},{"value":"/ `Responder` trait for each template type. This makes it easy to trivially","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":15978,"byte_end":16055,"line_start":433,"line_end":433,"column_start":1,"column_end":78}},{"value":"/ return a value of that type in a Rocket handler. See","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16056,"byte_end":16112,"line_start":434,"line_end":434,"column_start":1,"column_end":57}},{"value":"/ [the example](https://github.com/djc/askama/blob/master/testing/tests/rocket.rs)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16113,"byte_end":16197,"line_start":435,"line_end":435,"column_start":1,"column_end":85}},{"value":"/ from the Askama test suite for more on how to integrate.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16198,"byte_end":16258,"line_start":436,"line_end":436,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16259,"byte_end":16262,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ In case a run-time error occurs during templating, a `500 Internal Server","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16263,"byte_end":16340,"line_start":438,"line_end":438,"column_start":1,"column_end":78}},{"value":"/ Error` `Status` value will be returned, so that this can be further","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16341,"byte_end":16412,"line_start":439,"line_end":439,"column_start":1,"column_end":72}},{"value":"/ handled by your error catcher.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16413,"byte_end":16447,"line_start":440,"line_end":440,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16448,"byte_end":16451,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ ## Iron integration","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16452,"byte_end":16475,"line_start":442,"line_end":442,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16476,"byte_end":16479,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ Enabling the `with-iron` feature appends an implementation of Iron's","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16480,"byte_end":16552,"line_start":444,"line_end":444,"column_start":1,"column_end":73}},{"value":"/ `Modifier<Response>` trait for each template type. This makes it easy to","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16553,"byte_end":16629,"line_start":445,"line_end":445,"column_start":1,"column_end":77}},{"value":"/ trivially return a value of that type in an Iron handler. See","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16630,"byte_end":16695,"line_start":446,"line_end":446,"column_start":1,"column_end":66}},{"value":"/ [the example](https://github.com/djc/askama/blob/master/testing/tests/iron.rs)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16696,"byte_end":16778,"line_start":447,"line_end":447,"column_start":1,"column_end":83}},{"value":"/ from the Askama test suite for more on how to integrate.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16779,"byte_end":16839,"line_start":448,"line_end":448,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16840,"byte_end":16843,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ Note that Askama's generated `Modifier<Response>` implementation currently","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16844,"byte_end":16922,"line_start":450,"line_end":450,"column_start":1,"column_end":79}},{"value":"/ unwraps any run-time errors from the template. If you have a better","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16923,"byte_end":16994,"line_start":451,"line_end":451,"column_start":1,"column_end":72}},{"value":"/ suggestion, please [file an issue](https://github.com/djc/askama/issues/new).","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":16995,"byte_end":17076,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17077,"byte_end":17080,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ## Actix-web integration","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17081,"byte_end":17109,"line_start":454,"line_end":454,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17110,"byte_end":17113,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ Enabling the `with-actix-web` feature appends an implementation of Actix-web's","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17114,"byte_end":17196,"line_start":456,"line_end":456,"column_start":1,"column_end":83}},{"value":"/ `Responder` trait for each template type. This makes it easy to trivially return","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17197,"byte_end":17281,"line_start":457,"line_end":457,"column_start":1,"column_end":85}},{"value":"/ a value of that type in an Actix-web handler. See","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17282,"byte_end":17335,"line_start":458,"line_end":458,"column_start":1,"column_end":54}},{"value":"/ [the example](https://github.com/djc/askama/blob/master/testing/tests/actix_web.rs)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17336,"byte_end":17423,"line_start":459,"line_end":459,"column_start":1,"column_end":88}},{"value":"/ from the Askama test suite for more on how to integrate.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17424,"byte_end":17484,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17485,"byte_end":17488,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ ## Gotham integration","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17489,"byte_end":17514,"line_start":462,"line_end":462,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17515,"byte_end":17518,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ Enabling the `with-gotham` feature appends an implementation of Gotham's","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17519,"byte_end":17595,"line_start":464,"line_end":464,"column_start":1,"column_end":77}},{"value":"/ `IntoResponse` trait for each template type. This makes it easy to trivially","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17596,"byte_end":17676,"line_start":465,"line_end":465,"column_start":1,"column_end":81}},{"value":"/ return a value of that type in a Gotham handler. See","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17677,"byte_end":17733,"line_start":466,"line_end":466,"column_start":1,"column_end":57}},{"value":"/ [the example](https://github.com/djc/askama/blob/master/testing/tests/gotham.rs)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17734,"byte_end":17818,"line_start":467,"line_end":467,"column_start":1,"column_end":85}},{"value":"/ from the Askama test suite for more on how to integrate.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17819,"byte_end":17879,"line_start":468,"line_end":468,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17880,"byte_end":17883,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ In case of a run-time error occurring during templating, the response will be of the same","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17884,"byte_end":17977,"line_start":470,"line_end":470,"column_start":1,"column_end":94}},{"value":"/ signature, with a status code of `500 Internal Server Error`, mime `*/*`, and an empty `Body`.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":17978,"byte_end":18076,"line_start":471,"line_end":471,"column_start":1,"column_end":99}},{"value":"/ This preserves the response chain if any custom error handling needs to occur.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18077,"byte_end":18159,"line_start":472,"line_end":472,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18160,"byte_end":18163,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ ## The `json` filter","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18164,"byte_end":18188,"line_start":474,"line_end":474,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18189,"byte_end":18192,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ Enabling the `serde-json` filter will enable the use of the `json` filter.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18193,"byte_end":18271,"line_start":476,"line_end":476,"column_start":1,"column_end":79}},{"value":"/ This will output formatted JSON for any value that implements the required","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18272,"byte_end":18350,"line_start":477,"line_end":477,"column_start":1,"column_end":79}},{"value":"/ `Serialize` trait.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18351,"byte_end":18373,"line_start":478,"line_end":478,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18375,"byte_end":18400,"line_start":480,"line_end":480,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18655,"byte_end":18663,"line_start":492,"line_end":492,"column_start":11,"column_end":19},"name":"Template","qualname":"::Template","value":"Template","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" Main `Template` trait; implementations are generally derived\n","sig":null,"attributes":[{"value":"/ Main `Template` trait; implementations are generally derived","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18580,"byte_end":18644,"line_start":491,"line_end":491,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18746,"byte_end":18752,"line_start":494,"line_end":494,"column_start":8,"column_end":14},"name":"render","qualname":"::Template::render","value":"pub fn render(&Self) -> Result<String>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Helper method which allocates a new `String` and renders into it\n","sig":null,"attributes":[{"value":"/ Helper method which allocates a new `String` and renders into it","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18670,"byte_end":18738,"line_start":493,"line_end":493,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18967,"byte_end":18978,"line_start":500,"line_end":500,"column_start":8,"column_end":19},"name":"render_into","qualname":"::Template::render_into","value":"pub fn render_into(&Self, &mut dyn std::fmt::Write) -> Result<()>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Renders the template to the given `writer` buffer\n","sig":null,"attributes":[{"value":"/ Renders the template to the given `writer` buffer","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":18906,"byte_end":18959,"line_start":499,"line_end":499,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19102,"byte_end":19111,"line_start":502,"line_end":502,"column_start":8,"column_end":17},"name":"extension","qualname":"::Template::extension","value":"pub fn extension(&Self) -> Option<&'static str>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Helper function to inspect the template's extension\n","sig":null,"attributes":[{"value":"/ Helper function to inspect the template's extension","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19039,"byte_end":19094,"line_start":501,"line_end":501,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19241,"byte_end":19250,"line_start":504,"line_end":504,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::Template::size_hint","value":"pub fn size_hint(&Self) -> usize","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Provides an conservative estimate of the expanded length of the rendered template\n","sig":null,"attributes":[{"value":"/ Provides an conservative estimate of the expanded length of the rendered template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19148,"byte_end":19233,"line_start":503,"line_end":503,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19281,"byte_end":19294,"line_start":507,"line_end":507,"column_start":11,"column_end":24},"name":"SizedTemplate","qualname":"::SizedTemplate","value":"SizedTemplate","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19364,"byte_end":19373,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"extension","qualname":"::SizedTemplate::extension","value":"pub fn extension() -> Option<&'static str>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Helper function to inspect the template's extension\n","sig":null,"attributes":[{"value":"/ Helper function to inspect the template's extension","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19301,"byte_end":19356,"line_start":508,"line_end":508,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19498,"byte_end":19507,"line_start":511,"line_end":511,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::SizedTemplate::size_hint","value":"pub fn size_hint() -> usize","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Provides an conservative estimate of the expanded length of the rendered template\n","sig":null,"attributes":[{"value":"/ Provides an conservative estimate of the expanded length of the rendered template","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":19405,"byte_end":19490,"line_start":510,"line_end":510,"column_start":5,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":23626,"byte_end":23652,"line_start":637,"line_end":637,"column_start":8,"column_end":34},"name":"rerun_if_templates_changed","qualname":"::rerun_if_templates_changed","value":"pub fn rerun_if_templates_changed()","parent":null,"children":[],"decl_id":null,"docs":" Old build script helper to rebuild crates if contained templates have changed","sig":null,"attributes":[{"value":"/ Old build script helper to rebuild crates if contained templates have changed","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":23351,"byte_end":23432,"line_start":630,"line_end":630,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":23433,"byte_end":23436,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ This function is now deprecated and does nothing.","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":23437,"byte_end":23490,"line_start":632,"line_end":632,"column_start":1,"column_end":54}},{"value":"deprecated(since = \"0.8.1\", note =\n             \"file-level dependency tracking is handled automatically without build script\")","span":{"file_name":"C:\\Users\\clstl\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\askama-0.9.0\\src\\lib.rs","byte_start":23491,"byte_end":23618,"line_start":633,"line_end":636,"column_start":1,"column_end":3}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}